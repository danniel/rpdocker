version: '3.9'

services:

  rapidpro-db:
    container_name: rapidpro-db
    image: postgis/postgis:14-3.3
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - database-data:/var/lib/postgresql/data/
    restart: on-failure

  rapidpro-redis:
    container_name: rapidpro-redis
    image: redis:6-bullseye
    ports:
      - "6379:6379"
    env_file:
      - .env
    command: redis-server
    restart: on-failure

  rapidpro-temba:
    container_name: rapidpro-temba
    build:
      context: .
      dockerfile: temba.Dockerfile
    env_file:
      - .env
    environment:
      - "PYTHONUNBUFFERED=1"
      - "LOG_LEVEL=warning"
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - rapidpro-db
      - rapidpro-redis
    volumes:
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
  
  # # TODO
  # certbot:
  #   image: certbot/certbot:latest
  #   volumes:
  #     - ./certbot/www/:/var/www/certbot/:rw
  #     - ./certbot/conf/:/etc/letsencrypt/:rw

  rapidpro-elastic:
    container_name: rapidpro-elastic
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2-amd64
    ports:
      - "9200:9200"
      - "9300:9300"
    env_file:
      - .env
    environment:
      - "logger.level=WARN"
      - "discovery.type=single-node"
    restart: on-failure

  rapidpro-mailroom:
    container_name: rapidpro-mailroom
    build:
      context: .
      dockerfile: mailroom.Dockerfile
    env_file:
      - .env
    environment:
      - "LOG_LEVEL=warning"
    restart: on-failure
    ports:
      - "8090:8090"
    depends_on:
      - rapidpro-db
      - rapidpro-elastic
      - rapidpro-redis

  rapidpro-courier:
    container_name: rapidpro-courier
    build:
      context: .
      dockerfile: courier.Dockerfile
    env_file:
      - .env
    environment:
      - "LOG_LEVEL=warning"
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      - rapidpro-db
      - rapidpro-elastic
      - rapidpro-redis

  # # TODO
  # rapidpro-archiver:
  #   container_name: rapidpro-archiver
  #   build:
  #     context: .
  #     dockerfile: archiver.Dockerfile
  #   env_file:
  #     - .env
  #   environment:
  #     - "LOG_LEVEL=info"
  #   restart: on-failure
  #   depends_on:
  #     - rapidpro-db
  #     - rapidpro-elastic
  #     - rapidpro-redis

  # # TODO
  # rapidpro-indexer:
  #   container_name: rapidpro-indexer
  #   build:
  #     context: .
  #     dockerfile: indexer.Dockerfile
  #   env_file:
  #     - .env
  #   environment:
  #     - "LOG_LEVEL=info"
  #   restart: on-failure
  #   depends_on:
  #     - rapidpro-db
  #     - rapidpro-elastic
  #     - rapidpro-redis

volumes:
  database-data:
    name: rapidpro-pgdata
